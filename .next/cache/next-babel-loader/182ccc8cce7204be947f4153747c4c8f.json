{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar __jsx = React.createElement;\nimport React, { Fragment, useState, useCallback, useEffect } from 'react';\nimport { TextField, Layout, Form, FormLayout } from '@shopify/polaris';\nimport _ from 'lodash';\n\nconst Question = () => {\n  const {\n    0: options,\n    1: setOptions\n  } = useState({\n    'Option 1': '',\n    'Option 2': '',\n    'Option 3': '',\n    'Option 4': ''\n  });\n  const {\n    0: question,\n    1: setQuestion\n  } = useState('');\n  const {\n    0: numOptions,\n    1: setNumOptions\n  } = useState(1);\n  const handleNumOptions = useCallback(option => {\n    if (option > 4) {\n      setNumOptions(4), [];\n    } else {\n      setNumOptions(option), [];\n    }\n  });\n  const handleQuestion = useCallback(question => setQuestion(question), []);\n  const handleSubmit = useCallback(_event => setUrl(''), []);\n  const handleChange = useCallback(event => //setOptions({ ...options, [event.target.name]: event.target.value })\n  {});\n\n  const displayOptions = opts => {\n    if (!opts) {\n      return __jsx(\"div\", null, \"Loading...\");\n    }\n\n    return opts.map(item => {\n      const optionName = `Option ${item}`;\n      return __jsx(TextField, {\n        label: optionName,\n        name: optionName,\n        type: \"text\",\n        value: options[optionName],\n        onChange: e => console.log(e),\n        key: item\n      });\n    });\n  };\n\n  return __jsx(Fragment, null, __jsx(Form, {\n    noValidate: true,\n    onSubmit: handleSubmit\n  }, __jsx(FormLayout, null, __jsx(TextField, {\n    value: question,\n    onChange: handleQuestion,\n    label: \"Question\",\n    type: \"text\",\n    placeholder: \"Which of the following do you prefer, etc\"\n  }), __jsx(TextField, {\n    label: \"Number of options\",\n    type: \"number\",\n    maxLength: \"1\",\n    max: \"4\",\n    min: \"1\",\n    value: numOptions,\n    onChange: handleNumOptions\n  }), displayOptions(_.range(1, _parseInt(numOptions, 10) + 1)))));\n};\n\nexport default Question;","map":{"version":3,"sources":["C:/Users/Terence/Desktop/item_match/components/Question.js"],"names":["React","Fragment","useState","useCallback","useEffect","TextField","Layout","Form","FormLayout","_","Question","options","setOptions","question","setQuestion","numOptions","setNumOptions","handleNumOptions","option","handleQuestion","handleSubmit","_event","setUrl","handleChange","event","displayOptions","opts","map","item","optionName","e","console","log","range"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,WAApC,EAAiDC,SAAjD,QAAkE,OAAlE;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,IAA5B,EAAkCC,UAAlC,QAAoD,kBAApD;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBV,QAAQ,CAAC;AACrC,gBAAY,EADyB;AAErC,gBAAY,EAFyB;AAGrC,gBAAY,EAHyB;AAIrC,gBAAY;AAJyB,GAAD,CAAtC;AAMA,QAAM;AAAA,OAACW,QAAD;AAAA,OAAWC;AAAX,MAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACa,UAAD;AAAA,OAAaC;AAAb,MAA8Bd,QAAQ,CAAC,CAAD,CAA5C;AAEA,QAAMe,gBAAgB,GAAGd,WAAW,CAACe,MAAM,IAAI;AAC7C,QAAIA,MAAM,GAAG,CAAb,EAAgB;AACdF,MAAAA,aAAa,CAAC,CAAD,CAAb,EAAkB,EAAlB;AACD,KAFD,MAEO;AACLA,MAAAA,aAAa,CAACE,MAAD,CAAb,EAAuB,EAAvB;AACD;AACF,GANmC,CAApC;AAOA,QAAMC,cAAc,GAAGhB,WAAW,CAACU,QAAQ,IAAIC,WAAW,CAACD,QAAD,CAAxB,EAAoC,EAApC,CAAlC;AACA,QAAMO,YAAY,GAAGjB,WAAW,CAACkB,MAAM,IAAIC,MAAM,CAAC,EAAD,CAAjB,EAAuB,EAAvB,CAAhC;AACA,QAAMC,YAAY,GAAGpB,WAAW,CAACqB,KAAK,IACpC;AACA,GAAE,CAF4B,CAAhC;;AAKA,QAAMC,cAAc,GAAGC,IAAI,IAAI;AAC7B,QAAI,CAACA,IAAL,EAAW;AACT,aAAO,gCAAP;AACD;;AAED,WAAOA,IAAI,CAACC,GAAL,CAASC,IAAI,IAAI;AACtB,YAAMC,UAAU,GAAI,UAASD,IAAK,EAAlC;AACA,aACE,MAAC,SAAD;AACE,QAAA,KAAK,EAAEC,UADT;AAEE,QAAA,IAAI,EAAEA,UAFR;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,KAAK,EAAElB,OAAO,CAACkB,UAAD,CAJhB;AAKE,QAAA,QAAQ,EAAEC,CAAC,IAAIC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CALjB;AAME,QAAA,GAAG,EAAEF;AANP,QADF;AAUD,KAZM,CAAP;AAaD,GAlBD;;AAoBA,SACE,MAAC,QAAD,QACE,MAAC,IAAD;AAAM,IAAA,UAAU,MAAhB;AAAiB,IAAA,QAAQ,EAAER;AAA3B,KACE,MAAC,UAAD,QACE,MAAC,SAAD;AACE,IAAA,KAAK,EAAEP,QADT;AAEE,IAAA,QAAQ,EAAEM,cAFZ;AAGE,IAAA,KAAK,EAAC,UAHR;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,WAAW,EAAC;AALd,IADF,EAQE,MAAC,SAAD;AACE,IAAA,KAAK,EAAC,mBADR;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,SAAS,EAAC,GAHZ;AAIE,IAAA,GAAG,EAAC,GAJN;AAKE,IAAA,GAAG,EAAC,GALN;AAME,IAAA,KAAK,EAAEJ,UANT;AAOE,IAAA,QAAQ,EAAEE;AAPZ,IARF,EAiBGQ,cAAc,CAAChB,CAAC,CAACwB,KAAF,CAAQ,CAAR,EAAW,UAASlB,UAAT,EAAqB,EAArB,IAA2B,CAAtC,CAAD,CAjBjB,CADF,CADF,CADF;AAyBD,CArED;;AAuEA,eAAeL,QAAf","sourcesContent":["import React, { Fragment, useState, useCallback, useEffect } from 'react';\r\nimport { TextField, Layout, Form, FormLayout } from '@shopify/polaris';\r\nimport _ from 'lodash';\r\n\r\nconst Question = () => {\r\n  const [options, setOptions] = useState({\r\n    'Option 1': '',\r\n    'Option 2': '',\r\n    'Option 3': '',\r\n    'Option 4': ''\r\n  });\r\n  const [question, setQuestion] = useState('');\r\n  const [numOptions, setNumOptions] = useState(1);\r\n\r\n  const handleNumOptions = useCallback(option => {\r\n    if (option > 4) {\r\n      setNumOptions(4), [];\r\n    } else {\r\n      setNumOptions(option), [];\r\n    }\r\n  });\r\n  const handleQuestion = useCallback(question => setQuestion(question), []);\r\n  const handleSubmit = useCallback(_event => setUrl(''), []);\r\n  const handleChange = useCallback(event =>\r\n    //setOptions({ ...options, [event.target.name]: event.target.value })\r\n    {}\r\n  );\r\n\r\n  const displayOptions = opts => {\r\n    if (!opts) {\r\n      return <div>Loading...</div>;\r\n    }\r\n\r\n    return opts.map(item => {\r\n      const optionName = `Option ${item}`;\r\n      return (\r\n        <TextField\r\n          label={optionName}\r\n          name={optionName}\r\n          type='text'\r\n          value={options[optionName]}\r\n          onChange={e => console.log(e)}\r\n          key={item}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        <FormLayout>\r\n          <TextField\r\n            value={question}\r\n            onChange={handleQuestion}\r\n            label='Question'\r\n            type='text'\r\n            placeholder='Which of the following do you prefer, etc'\r\n          />\r\n          <TextField\r\n            label='Number of options'\r\n            type='number'\r\n            maxLength='1'\r\n            max='4'\r\n            min='1'\r\n            value={numOptions}\r\n            onChange={handleNumOptions}\r\n          />\r\n          {displayOptions(_.range(1, parseInt(numOptions, 10) + 1))}\r\n        </FormLayout>\r\n      </Form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n"]},"metadata":{},"sourceType":"module"}