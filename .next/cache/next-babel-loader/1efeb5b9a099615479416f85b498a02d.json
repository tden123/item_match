{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Fragment, useState, useCallback, useEffect } from 'react';\nimport { TextField, Layout, Form, FormLayout } from '@shopify/polaris';\nimport _ from 'lodash';\n\nvar Question = function Question() {\n  var _useState = useState([1]),\n      options = _useState[0],\n      setOptions = _useState[1];\n\n  var _useState2 = useState(''),\n      question = _useState2[0],\n      setQuestion = _useState2[1];\n\n  var _useState3 = useState(2),\n      numOptions = _useState3[0],\n      setNumOptions = _useState3[1];\n\n  var handleNumOptions = useCallback(function (option) {\n    return setNumOptions(option);\n  }, []);\n  var handleQuestion = useCallback(function (question) {\n    return setQuestion(question);\n  }, []);\n  var handleSubmit = useCallback(function (_event) {\n    return setUrl('');\n  }, []);\n  useEffect(function () {\n    setOptions(_.range(1, numOptions));\n  }, [numOptions]);\n\n  var displayOptions = function displayOptions(opts) {\n    console.log(options);\n\n    if (!opts) {\n      return __jsx(\"div\", null, \"Loading...\");\n    }\n\n    return opts.map(function (item) {\n      var fullLabel = \"Option \".concat(item);\n      return __jsx(TextField, {\n        label: fullLabel,\n        type: \"text\",\n        value: '',\n        onChange: function onChange() {},\n        key: item\n      });\n    });\n  };\n\n  return __jsx(Fragment, null, __jsx(Form, {\n    noValidate: true,\n    onSubmit: handleSubmit\n  }, __jsx(FormLayout, null, __jsx(TextField, {\n    value: question,\n    onChange: handleQuestion,\n    label: \"Question\",\n    type: \"text\",\n    placeholder: \"Which of the following do you prefer, etc\"\n  }), __jsx(TextField, {\n    label: \"Number of options\",\n    type: \"number\",\n    max: \"5\",\n    min: \"1\",\n    value: numOptions - 1,\n    onChange: handleNumOptions\n  }), displayOptions(options))));\n};\n\nexport default Question;","map":{"version":3,"sources":["C:/Users/teren/Desktop/item_match/components/Question.js"],"names":["React","Fragment","useState","useCallback","useEffect","TextField","Layout","Form","FormLayout","_","Question","options","setOptions","question","setQuestion","numOptions","setNumOptions","handleNumOptions","option","handleQuestion","handleSubmit","_event","setUrl","range","displayOptions","opts","console","log","map","item","fullLabel"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,WAApC,EAAiDC,SAAjD,QAAkE,OAAlE;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,IAA5B,EAAkCC,UAAlC,QAAoD,kBAApD;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA,kBAEWR,QAAQ,CAAC,CAAC,CAAD,CAAD,CAFnB;AAAA,MAEZS,OAFY;AAAA,MAEHC,UAFG;;AAAA,mBAGaV,QAAQ,CAAC,EAAD,CAHrB;AAAA,MAGZW,QAHY;AAAA,MAGFC,WAHE;;AAAA,mBAIiBZ,QAAQ,CAAC,CAAD,CAJzB;AAAA,MAIZa,UAJY;AAAA,MAIAC,aAJA;;AAMnB,MAAMC,gBAAgB,GAAGd,WAAW,CAAC,UAACe,MAAD;AAAA,WAAYF,aAAa,CAACE,MAAD,CAAzB;AAAA,GAAD,EAAoC,EAApC,CAApC;AACA,MAAMC,cAAc,GAAGhB,WAAW,CAAC,UAACU,QAAD;AAAA,WAAcC,WAAW,CAACD,QAAD,CAAzB;AAAA,GAAD,EAAsC,EAAtC,CAAlC;AACA,MAAMO,YAAY,GAAGjB,WAAW,CAAC,UAACkB,MAAD;AAAA,WAAYC,MAAM,CAAC,EAAD,CAAlB;AAAA,GAAD,EAAyB,EAAzB,CAAhC;AAEAlB,EAAAA,SAAS,CAAC,YAAM;AACZQ,IAAAA,UAAU,CAACH,CAAC,CAACc,KAAF,CAAQ,CAAR,EAAWR,UAAX,CAAD,CAAV;AACH,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;;AAKA,MAAMS,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAU;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAYhB,OAAZ;;AACA,QAAI,CAACc,IAAL,EAAW;AACP,aAAO,gCAAP;AACH;;AACD,WACIA,IAAI,CAACG,GAAL,CAAS,UAAAC,IAAI,EAAI;AACb,UAAMC,SAAS,oBAAaD,IAAb,CAAf;AACA,aACI,MAAC,SAAD;AACI,QAAA,KAAK,EAAEC,SADX;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,KAAK,EAAE,EAHX;AAII,QAAA,QAAQ,EAAE,oBAAM,CAAG,CAJvB;AAKI,QAAA,GAAG,EAAED;AALT,QADJ;AASH,KAXD,CADJ;AAaH,GAlBD;;AAoBA,SACI,MAAC,QAAD,QACI,MAAC,IAAD;AAAM,IAAA,UAAU,MAAhB;AAAiB,IAAA,QAAQ,EAAET;AAA3B,KACI,MAAC,UAAD,QACI,MAAC,SAAD;AACI,IAAA,KAAK,EAAEP,QADX;AAEI,IAAA,QAAQ,EAAEM,cAFd;AAGI,IAAA,KAAK,EAAC,UAHV;AAII,IAAA,IAAI,EAAC,MAJT;AAKI,IAAA,WAAW,EAAC;AALhB,IADJ,EAQI,MAAC,SAAD;AACI,IAAA,KAAK,EAAC,mBADV;AAEI,IAAA,IAAI,EAAC,QAFT;AAGI,IAAA,GAAG,EAAC,GAHR;AAII,IAAA,GAAG,EAAC,GAJR;AAKI,IAAA,KAAK,EAAEJ,UAAU,GAAG,CALxB;AAMI,IAAA,QAAQ,EAAEE;AANd,IARJ,EAkBKO,cAAc,CAACb,OAAD,CAlBnB,CADJ,CADJ,CADJ;AA2BH,CA9DD;;AAgEA,eAAeD,QAAf","sourcesContent":["import React, { Fragment, useState, useCallback, useEffect } from 'react'\r\nimport { TextField, Layout, Form, FormLayout } from '@shopify/polaris';\r\nimport _ from 'lodash';\r\n\r\nconst Question = () => {\r\n\r\n    const [options, setOptions] = useState([1]);\r\n    const [question, setQuestion] = useState('');\r\n    const [numOptions, setNumOptions] = useState(2);\r\n\r\n    const handleNumOptions = useCallback((option) => setNumOptions(option), []);\r\n    const handleQuestion = useCallback((question) => setQuestion(question), []);\r\n    const handleSubmit = useCallback((_event) => setUrl(''), []);\r\n\r\n    useEffect(() => {\r\n        setOptions(_.range(1, numOptions));\r\n    }, [numOptions])\r\n\r\n\r\n    const displayOptions = (opts) => {\r\n        console.log(options);\r\n        if (!opts) {\r\n            return <div>Loading...</div>\r\n        }\r\n        return (\r\n            opts.map(item => {\r\n                const fullLabel = `Option ${item}`;\r\n                return (\r\n                    <TextField\r\n                        label={fullLabel}\r\n                        type=\"text\"\r\n                        value={''}\r\n                        onChange={() => { }}\r\n                        key={item}\r\n                    />\r\n                )\r\n            }))\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Form noValidate onSubmit={handleSubmit}>\r\n                <FormLayout>\r\n                    <TextField\r\n                        value={question}\r\n                        onChange={handleQuestion}\r\n                        label=\"Question\"\r\n                        type=\"text\"\r\n                        placeholder=\"Which of the following do you prefer, etc\"\r\n                    />\r\n                    <TextField\r\n                        label=\"Number of options\"\r\n                        type=\"number\"\r\n                        max=\"5\"\r\n                        min=\"1\"\r\n                        value={numOptions - 1}\r\n                        onChange={handleNumOptions}\r\n\r\n                    />\r\n\r\n                    {displayOptions(options)}\r\n                </FormLayout>\r\n            </Form>\r\n\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default Question;"]},"metadata":{},"sourceType":"module"}