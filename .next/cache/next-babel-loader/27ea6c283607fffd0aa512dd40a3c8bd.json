{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Fragment, useState, useCallback, useEffect } from 'react';\nimport { TextField, Layout, Form, FormLayout } from '@shopify/polaris';\nimport _ from 'lodash';\n\nvar Question = function Question() {\n  var _useState = useState({\n    'Option 1': '',\n    'Option 2': '',\n    'Option 3': '',\n    'Option 4': ''\n  }),\n      options = _useState[0],\n      setOptions = _useState[1];\n\n  var _useState2 = useState(''),\n      question = _useState2[0],\n      setQuestion = _useState2[1];\n\n  var _useState3 = useState(1),\n      numOptions = _useState3[0],\n      setNumOptions = _useState3[1];\n\n  var handleNumOptions = useCallback(function (option) {\n    if (option > 4) {\n      setNumOptions(4), [];\n    } else {\n      setNumOptions(option), [];\n    }\n  });\n  var handleQuestion = useCallback(function (question) {\n    return setQuestion(question);\n  }, []);\n  var handleSubmit = useCallback(function (_event) {\n    return setUrl('');\n  }, []);\n\n  var displayOptions = function displayOptions(opts) {\n    if (!opts) {\n      return __jsx(\"div\", null, \"Loading...\");\n    }\n\n    console.log(options);\n\n    var handleChange = function handleChange(e) {\n      console.log(e);\n      setOptions(_objectSpread({}, options, _defineProperty({}, e.target.name, e.target.value)));\n    };\n\n    return opts.map(function (item) {\n      var optionName = \"Option \".concat(item);\n      return __jsx(TextField, {\n        label: optionName,\n        name: optionName,\n        type: \"text\",\n        value: options[optionName],\n        onChange: handleChange,\n        key: item\n      });\n    });\n  };\n\n  return __jsx(Fragment, null, __jsx(Form, {\n    noValidate: true,\n    onSubmit: handleSubmit\n  }, __jsx(FormLayout, null, __jsx(TextField, {\n    value: question,\n    onChange: handleQuestion,\n    label: \"Question\",\n    type: \"text\",\n    placeholder: \"Which of the following do you prefer, etc\"\n  }), __jsx(TextField, {\n    label: \"Number of options\",\n    type: \"number\",\n    maxLength: \"1\",\n    max: \"4\",\n    min: \"1\",\n    value: numOptions,\n    onChange: handleNumOptions\n  }), displayOptions(_.range(1, _parseInt(numOptions, 10) + 1)))));\n};\n\nexport default Question;","map":{"version":3,"sources":["C:/Users/Terence/Desktop/item_match/components/Question.js"],"names":["React","Fragment","useState","useCallback","useEffect","TextField","Layout","Form","FormLayout","_","Question","options","setOptions","question","setQuestion","numOptions","setNumOptions","handleNumOptions","option","handleQuestion","handleSubmit","_event","setUrl","displayOptions","opts","console","log","handleChange","e","target","name","value","map","item","optionName","range"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useCallback, useEffect } from 'react';\r\nimport { TextField, Layout, Form, FormLayout } from '@shopify/polaris';\r\nimport _ from 'lodash';\r\n\r\nconst Question = () => {\r\n  const [options, setOptions] = useState({\r\n    'Option 1': '',\r\n    'Option 2': '',\r\n    'Option 3': '',\r\n    'Option 4': ''\r\n  });\r\n  const [question, setQuestion] = useState('');\r\n  const [numOptions, setNumOptions] = useState(1);\r\n\r\n  const handleNumOptions = useCallback(option => {\r\n    if (option > 4) {\r\n      setNumOptions(4), [];\r\n    } else {\r\n      setNumOptions(option), [];\r\n    }\r\n  });\r\n  const handleQuestion = useCallback(question => setQuestion(question), []);\r\n  const handleSubmit = useCallback(_event => setUrl(''), []);\r\n\r\n  const displayOptions = opts => {\r\n    if (!opts) {\r\n      return <div>Loading...</div>;\r\n    }\r\n\r\n    console.log(options);\r\n\r\n    const handleChange = e => {\r\n      console.log(e);\r\n\r\n      setOptions({\r\n        ...options,\r\n        [e.target.name]: e.target.value\r\n      });\r\n    };\r\n\r\n    return opts.map(item => {\r\n      const optionName = `Option ${item}`;\r\n\r\n      return (\r\n        <TextField\r\n          label={optionName}\r\n          name={optionName}\r\n          type='text'\r\n          value={options[optionName]}\r\n          onChange={handleChange}\r\n          key={item}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        <FormLayout>\r\n          <TextField\r\n            value={question}\r\n            onChange={handleQuestion}\r\n            label='Question'\r\n            type='text'\r\n            placeholder='Which of the following do you prefer, etc'\r\n          />\r\n          <TextField\r\n            label='Number of options'\r\n            type='number'\r\n            maxLength='1'\r\n            max='4'\r\n            min='1'\r\n            value={numOptions}\r\n            onChange={handleNumOptions}\r\n          />\r\n          {displayOptions(_.range(1, parseInt(numOptions, 10) + 1))}\r\n        </FormLayout>\r\n      </Form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n"]},"metadata":{},"sourceType":"module"}