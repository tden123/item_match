{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar __jsx = React.createElement;\nimport React, { Fragment, useState, useCallback, useEffect } from 'react';\nimport { TextField, Layout, Form, FormLayout, Button, ButtonGroup } from '@shopify/polaris';\nimport _ from 'lodash';\n\nconst Question = () => {\n  const {\n    0: options,\n    1: setOptions\n  } = useState({\n    'Option 1': '',\n    'Option 2': '',\n    'Option 3': '',\n    'Option 4': ''\n  });\n  const {\n    0: question,\n    1: setQuestion\n  } = useState('');\n  const {\n    0: numOptions,\n    1: setNumOptions\n  } = useState(2);\n  const handleAddOption = useCallback(() => {\n    if (numOptions > 4) {\n      setNumOptions(4), [];\n    } else if (numOptions < 2) {\n      setNumOptions(2), [];\n    } else if (numOptions !== 4) {\n      setNumOptions(numOptions + 1), [];\n    }\n  });\n  const handleRemoveOption = useCallback(() => {\n    if (numOptions > 4) {\n      setNumOptions(4), [];\n    } else if (numOptions < 2) {\n      setNumOptions(2), [];\n    } else if (numOptions !== 2) {\n      setNumOptions(numOptions - 1), [];\n    }\n  });\n  const handleQuestion = useCallback(question => setQuestion(question), []);\n  const handleSubmit = useCallback(_event => setUrl(''), []);\n\n  const displayOptions = opts => {\n    return opts.map(item => {\n      return __jsx(TextField, {\n        label: `Option ${item}`,\n        type: \"text\",\n        value: '',\n        onChange: e => console.log(e),\n        key: item\n      });\n    });\n  };\n\n  return __jsx(Fragment, null, __jsx(Form, {\n    noValidate: true,\n    onSubmit: handleSubmit\n  }, __jsx(FormLayout, null, __jsx(TextField, {\n    value: question,\n    onChange: handleQuestion,\n    label: \"Question\",\n    type: \"text\",\n    placeholder: \"Which of the following do you prefer, etc\"\n  }), __jsx(ButtonGroup, null, numOptions === 4 ? __jsx(Button, {\n    primary: true,\n    disabled: true\n  }, \"Add Option\") : __jsx(Button, {\n    primary: true,\n    onClick: handleAddOption\n  }, \"Add Option\"), numOptions === 2 ? __jsx(Button, {\n    secondary: true,\n    disabled: true\n  }, \"Remove Option\") : __jsx(Button, {\n    secondary: true,\n    onClick: handleRemoveOption\n  }, \"Remove Option\")), displayOptions(_.range(1, _parseInt(numOptions, 10) + 1)))));\n};\n\nexport default Question;","map":{"version":3,"sources":["C:/Users/Terence/Desktop/item_match/components/Question.js"],"names":["React","Fragment","useState","useCallback","useEffect","TextField","Layout","Form","FormLayout","Button","ButtonGroup","_","Question","options","setOptions","question","setQuestion","numOptions","setNumOptions","handleAddOption","handleRemoveOption","handleQuestion","handleSubmit","_event","setUrl","displayOptions","opts","map","item","e","console","log","range"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useCallback, useEffect } from 'react';\r\nimport {\r\n  TextField,\r\n  Layout,\r\n  Form,\r\n  FormLayout,\r\n  Button,\r\n  ButtonGroup\r\n} from '@shopify/polaris';\r\nimport _ from 'lodash';\r\n\r\nconst Question = () => {\r\n  const [options, setOptions] = useState({\r\n    'Option 1': '',\r\n    'Option 2': '',\r\n    'Option 3': '',\r\n    'Option 4': ''\r\n  });\r\n  const [question, setQuestion] = useState('');\r\n  const [numOptions, setNumOptions] = useState(2);\r\n\r\n  const handleAddOption = useCallback(() => {\r\n    if (numOptions > 4) {\r\n      setNumOptions(4), [];\r\n    } else if (numOptions < 2) {\r\n      setNumOptions(2), [];\r\n    } else if (numOptions !== 4) {\r\n      setNumOptions(numOptions + 1), [];\r\n    }\r\n  });\r\n\r\n  const handleRemoveOption = useCallback(() => {\r\n    if (numOptions > 4) {\r\n      setNumOptions(4), [];\r\n    } else if (numOptions < 2) {\r\n      setNumOptions(2), [];\r\n    } else if (numOptions !== 2) {\r\n      setNumOptions(numOptions - 1), [];\r\n    }\r\n  });\r\n\r\n  const handleQuestion = useCallback(question => setQuestion(question), []);\r\n  const handleSubmit = useCallback(_event => setUrl(''), []);\r\n\r\n  const displayOptions = opts => {\r\n    return opts.map(item => {\r\n      return (\r\n        <TextField\r\n          label={`Option ${item}`}\r\n          type='text'\r\n          value={''}\r\n          onChange={e => console.log(e)}\r\n          key={item}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        <FormLayout>\r\n          <TextField\r\n            value={question}\r\n            onChange={handleQuestion}\r\n            label='Question'\r\n            type='text'\r\n            placeholder='Which of the following do you prefer, etc'\r\n          />\r\n          <ButtonGroup>\r\n            {numOptions === 4 ? (\r\n              <Button primary disabled>\r\n                Add Option\r\n              </Button>\r\n            ) : (\r\n              <Button primary onClick={handleAddOption}>\r\n                Add Option\r\n              </Button>\r\n            )}\r\n\r\n            {numOptions === 2 ? (\r\n              <Button secondary disabled>\r\n                Remove Option\r\n              </Button>\r\n            ) : (\r\n              <Button secondary onClick={handleRemoveOption}>\r\n                Remove Option\r\n              </Button>\r\n            )}\r\n          </ButtonGroup>\r\n\r\n          {displayOptions(_.range(1, parseInt(numOptions, 10) + 1))}\r\n        </FormLayout>\r\n      </Form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n"]},"metadata":{},"sourceType":"module"}