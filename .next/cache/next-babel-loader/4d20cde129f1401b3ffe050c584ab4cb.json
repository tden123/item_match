{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar __jsx = React.createElement;\nimport React, { Fragment, useState, useCallback, useEffect } from 'react';\nimport { TextField, Layout, Form, FormLayout, Button, ButtonGroup } from '@shopify/polaris';\nimport _ from 'lodash';\n\nvar Question = function Question() {\n  var _useState = useState({\n    'Option 1': '',\n    'Option 2': '',\n    'Option 3': '',\n    'Option 4': ''\n  }),\n      options = _useState[0],\n      setOptions = _useState[1];\n\n  var _useState2 = useState(''),\n      question = _useState2[0],\n      setQuestion = _useState2[1];\n\n  var _useState3 = useState(2),\n      numOptions = _useState3[0],\n      setNumOptions = _useState3[1];\n\n  var handleAddOption = useCallback(function () {\n    if (numOptions > 4) {\n      setNumOptions(4), [];\n    } else if (numOptions < 2) {\n      setNumOptions(2), [];\n    } else if (numOptions !== 4) {\n      setNumOptions(numOptions + 1), [];\n    }\n  });\n  var handleRemoveOption = useCallback(function () {\n    if (numOptions > 4) {\n      setNumOptions(4), [];\n    } else if (numOptions < 2) {\n      setNumOptions(2), [];\n    } else if (numOptions !== 2) {\n      setNumOptions(numOptions - 1), [];\n    }\n  });\n  var handleQuestion = useCallback(function (question) {\n    return setQuestion(question);\n  }, []);\n  var handleSubmit = useCallback(function (_event) {\n    return setUrl('');\n  }, []);\n\n  var displayOptions = function displayOptions(opts) {\n    if (!opts) {\n      return __jsx(\"div\", null, \"Loading...\");\n    }\n\n    return opts.map(function (item) {\n      var optionName = \"Option \".concat(item);\n      return __jsx(TextField, {\n        label: optionName,\n        name: optionName,\n        type: \"text\",\n        value: options[optionName],\n        onChange: function onChange(e) {\n          return console.log(e);\n        },\n        key: item\n      });\n    });\n  };\n\n  return __jsx(Fragment, null, __jsx(Form, {\n    noValidate: true,\n    onSubmit: handleSubmit\n  }, __jsx(FormLayout, null, __jsx(TextField, {\n    value: question,\n    onChange: handleQuestion,\n    label: \"Question\",\n    type: \"text\",\n    placeholder: \"Which of the following do you prefer, etc\"\n  }), __jsx(ButtonGroup, null, __jsx(Button, {\n    primary: true,\n    onClick: handleAddOption\n  }, \"Add Option\"), __jsx(Button, {\n    secondary: true,\n    onClick: handleRemoveOption\n  }, \"Remove Option\")), displayOptions(_.range(1, _parseInt(numOptions, 10) + 1)))));\n};\n\nexport default Question;","map":{"version":3,"sources":["C:/Users/Terence/Desktop/item_match/components/Question.js"],"names":["React","Fragment","useState","useCallback","useEffect","TextField","Layout","Form","FormLayout","Button","ButtonGroup","_","Question","options","setOptions","question","setQuestion","numOptions","setNumOptions","handleAddOption","handleRemoveOption","handleQuestion","handleSubmit","_event","setUrl","displayOptions","opts","map","item","optionName","e","console","log","range"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useCallback, useEffect } from 'react';\r\nimport {\r\n  TextField,\r\n  Layout,\r\n  Form,\r\n  FormLayout,\r\n  Button,\r\n  ButtonGroup\r\n} from '@shopify/polaris';\r\nimport _ from 'lodash';\r\n\r\nconst Question = () => {\r\n  const [options, setOptions] = useState({\r\n    'Option 1': '',\r\n    'Option 2': '',\r\n    'Option 3': '',\r\n    'Option 4': ''\r\n  });\r\n  const [question, setQuestion] = useState('');\r\n  const [numOptions, setNumOptions] = useState(2);\r\n\r\n  const handleAddOption = useCallback(() => {\r\n    if (numOptions > 4) {\r\n      setNumOptions(4), [];\r\n    } else if (numOptions < 2) {\r\n      setNumOptions(2), [];\r\n    } else if (numOptions !== 4) {\r\n      setNumOptions(numOptions + 1), [];\r\n    }\r\n  });\r\n\r\n  const handleRemoveOption = useCallback(() => {\r\n    if (numOptions > 4) {\r\n      setNumOptions(4), [];\r\n    } else if (numOptions < 2) {\r\n      setNumOptions(2), [];\r\n    } else if (numOptions !== 2) {\r\n      setNumOptions(numOptions - 1), [];\r\n    }\r\n  });\r\n\r\n  const handleQuestion = useCallback(question => setQuestion(question), []);\r\n  const handleSubmit = useCallback(_event => setUrl(''), []);\r\n\r\n  const displayOptions = opts => {\r\n    if (!opts) {\r\n      return <div>Loading...</div>;\r\n    }\r\n\r\n    return opts.map(item => {\r\n      const optionName = `Option ${item}`;\r\n      return (\r\n        <TextField\r\n          label={optionName}\r\n          name={optionName}\r\n          type='text'\r\n          value={options[optionName]}\r\n          onChange={e => console.log(e)}\r\n          key={item}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        <FormLayout>\r\n          <TextField\r\n            value={question}\r\n            onChange={handleQuestion}\r\n            label='Question'\r\n            type='text'\r\n            placeholder='Which of the following do you prefer, etc'\r\n          />\r\n          <ButtonGroup>\r\n            <Button primary onClick={handleAddOption}>\r\n              Add Option\r\n            </Button>\r\n            <Button secondary onClick={handleRemoveOption}>\r\n              Remove Option\r\n            </Button>\r\n          </ButtonGroup>\r\n\r\n          {displayOptions(_.range(1, parseInt(numOptions, 10) + 1))}\r\n        </FormLayout>\r\n      </Form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n"]},"metadata":{},"sourceType":"module"}