{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Fragment, useState, useCallback, useEffect } from 'react';\nimport { TextField, Layout, Form, FormLayout } from '@shopify/polaris';\n\nvar Question = function Question() {\n  var _useState = useState(0),\n      options = _useState[0],\n      setOptions = _useState[1];\n\n  var _useState2 = useState(''),\n      question = _useState2[0],\n      setQuestion = _useState2[1];\n\n  var _useState3 = useState(1),\n      numOptions = _useState3[0],\n      setNumOptions = _useState3[1];\n\n  var handleNumOptions = useCallback(function (option) {\n    return setNumOptions(option);\n  }, []);\n  var handleQuestion = useCallback(function (question) {\n    return setQuestion(question);\n  }, []);\n  var handleSubmit = useCallback(function (_event) {\n    return setUrl('');\n  }, []);\n  useEffect(function () {\n    displayOptions(numOptions);\n  }, [numOptions]);\n\n  var displayOptions = function displayOptions(options) {\n    for (i = 0; i < options; i++) {\n      return __jsx(TextField, {\n        label: \"Option\",\n        type: \"text\",\n        value: function value() {},\n        onChange: function onChange() {}\n      });\n    }\n  };\n\n  return __jsx(Fragment, null, __jsx(Form, {\n    noValidate: true,\n    onSubmit: handleSubmit\n  }, __jsx(FormLayout, null, __jsx(TextField, {\n    value: question,\n    onChange: handleQuestion,\n    label: \"Question\",\n    type: \"text\",\n    placeholder: \"Which of the following do you prefer, etc\"\n  }), __jsx(TextField, {\n    label: \"Number of options\",\n    type: \"number\",\n    max: \"4\",\n    min: \"1\",\n    value: numPptions,\n    onChange: handleNumOptions\n  }), displayOptions)));\n};\n\nexport default Question;","map":{"version":3,"sources":["C:/Users/teren/Desktop/item_match/components/Question.js"],"names":["React","Fragment","useState","useCallback","useEffect","TextField","Layout","Form","FormLayout","Question","options","setOptions","question","setQuestion","numOptions","setNumOptions","handleNumOptions","option","handleQuestion","handleSubmit","_event","setUrl","displayOptions","i","numPptions"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,WAApC,EAAiDC,SAAjD,QAAkE,OAAlE;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,IAA5B,EAAkCC,UAAlC,QAAoD,kBAApD;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA,kBAEWP,QAAQ,CAAC,CAAD,CAFnB;AAAA,MAEZQ,OAFY;AAAA,MAEHC,UAFG;;AAAA,mBAGaT,QAAQ,CAAC,EAAD,CAHrB;AAAA,MAGZU,QAHY;AAAA,MAGFC,WAHE;;AAAA,mBAIiBX,QAAQ,CAAC,CAAD,CAJzB;AAAA,MAIZY,UAJY;AAAA,MAIAC,aAJA;;AAMnB,MAAMC,gBAAgB,GAAGb,WAAW,CAAC,UAACc,MAAD;AAAA,WAAYF,aAAa,CAACE,MAAD,CAAzB;AAAA,GAAD,EAAoC,EAApC,CAApC;AACA,MAAMC,cAAc,GAAGf,WAAW,CAAC,UAACS,QAAD;AAAA,WAAcC,WAAW,CAACD,QAAD,CAAzB;AAAA,GAAD,EAAsC,EAAtC,CAAlC;AACA,MAAMO,YAAY,GAAGhB,WAAW,CAAC,UAACiB,MAAD;AAAA,WAAYC,MAAM,CAAC,EAAD,CAAlB;AAAA,GAAD,EAAyB,EAAzB,CAAhC;AAEAjB,EAAAA,SAAS,CAAC,YAAM;AACZkB,IAAAA,cAAc,CAACR,UAAD,CAAd;AACH,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;;AAKA,MAAMQ,cAAc,GAAG,SAAjBA,cAAiB,CAACZ,OAAD,EAAa;AAChC,SAAKa,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGb,OAAhB,EAAyBa,CAAC,EAA1B,EAA8B;AAC1B,aACI,MAAC,SAAD;AACI,QAAA,KAAK,EAAC,QADV;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,KAAK,EAAE,iBAAM,CAAG,CAHpB;AAII,QAAA,QAAQ,EAAE,oBAAM,CAAG;AAJvB,QADJ;AASH;AACJ,GAZD;;AAcA,SACI,MAAC,QAAD,QACI,MAAC,IAAD;AAAM,IAAA,UAAU,MAAhB;AAAiB,IAAA,QAAQ,EAAEJ;AAA3B,KACI,MAAC,UAAD,QACI,MAAC,SAAD;AACI,IAAA,KAAK,EAAEP,QADX;AAEI,IAAA,QAAQ,EAAEM,cAFd;AAGI,IAAA,KAAK,EAAC,UAHV;AAII,IAAA,IAAI,EAAC,MAJT;AAKI,IAAA,WAAW,EAAC;AALhB,IADJ,EAQI,MAAC,SAAD;AACI,IAAA,KAAK,EAAC,mBADV;AAEI,IAAA,IAAI,EAAC,QAFT;AAGI,IAAA,GAAG,EAAC,GAHR;AAII,IAAA,GAAG,EAAC,GAJR;AAKI,IAAA,KAAK,EAAEM,UALX;AAMI,IAAA,QAAQ,EAAER;AANd,IARJ,EAiBKM,cAjBL,CADJ,CADJ,CADJ;AA0BH,CAvDD;;AAyDA,eAAeb,QAAf","sourcesContent":["import React, { Fragment, useState, useCallback, useEffect } from 'react'\r\nimport { TextField, Layout, Form, FormLayout } from '@shopify/polaris';\r\n\r\nconst Question = () => {\r\n\r\n    const [options, setOptions] = useState(0);\r\n    const [question, setQuestion] = useState('');\r\n    const [numOptions, setNumOptions] = useState(1);\r\n\r\n    const handleNumOptions = useCallback((option) => setNumOptions(option), []);\r\n    const handleQuestion = useCallback((question) => setQuestion(question), []);\r\n    const handleSubmit = useCallback((_event) => setUrl(''), []);\r\n\r\n    useEffect(() => {\r\n        displayOptions(numOptions)\r\n    }, [numOptions])\r\n\r\n\r\n    const displayOptions = (options) => {\r\n        for (i = 0; i < options; i++) {\r\n            return (\r\n                <TextField\r\n                    label=\"Option\"\r\n                    type=\"text\"\r\n                    value={() => { }}\r\n                    onChange={() => { }}\r\n\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Form noValidate onSubmit={handleSubmit}>\r\n                <FormLayout>\r\n                    <TextField\r\n                        value={question}\r\n                        onChange={handleQuestion}\r\n                        label=\"Question\"\r\n                        type=\"text\"\r\n                        placeholder=\"Which of the following do you prefer, etc\"\r\n                    />\r\n                    <TextField\r\n                        label=\"Number of options\"\r\n                        type=\"number\"\r\n                        max=\"4\"\r\n                        min=\"1\"\r\n                        value={numPptions}\r\n                        onChange={handleNumOptions}\r\n\r\n                    />\r\n                    {displayOptions}\r\n                </FormLayout>\r\n            </Form>\r\n\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default Question;"]},"metadata":{},"sourceType":"module"}