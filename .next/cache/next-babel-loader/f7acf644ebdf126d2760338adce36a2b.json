{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Fragment, useState, useCallback, useEffect } from 'react';\nimport { TextField, Layout, Form, FormLayout } from '@shopify/polaris';\nimport _ from 'lodash';\n\nconst Question = () => {\n  const {\n    0: options,\n    1: setOptions\n  } = useState([1]);\n  const {\n    0: question,\n    1: setQuestion\n  } = useState('');\n  const {\n    0: numOptions,\n    1: setNumOptions\n  } = useState(2);\n  const handleNumOptions = useCallback(option => setNumOptions(option), []);\n  const handleQuestion = useCallback(question => setQuestion(question), []);\n  const handleSubmit = useCallback(_event => setUrl(''), []);\n  useEffect(() => {\n    setOptions(_.range(1, numOptions));\n  }, [numOptions]);\n\n  const displayOptions = opts => {\n    console.log(options);\n\n    if (!opts) {\n      return __jsx(\"div\", null, \"Loading...\");\n    }\n\n    return opts.map(item => {\n      const fullLabel = `Option ${item}`;\n      return __jsx(TextField, {\n        label: fullLabel,\n        type: \"text\",\n        value: '',\n        onChange: () => {},\n        key: item\n      });\n    });\n  };\n\n  return __jsx(Fragment, null, __jsx(Form, {\n    noValidate: true,\n    onSubmit: handleSubmit\n  }, __jsx(FormLayout, null, __jsx(TextField, {\n    value: question,\n    onChange: handleQuestion,\n    label: \"Question\",\n    type: \"text\",\n    placeholder: \"Which of the following do you prefer, etc\"\n  }), __jsx(TextField, {\n    label: \"Number of options\",\n    type: \"number\",\n    max: \"5\",\n    min: \"1\",\n    value: numOptions - 1,\n    onChange: handleNumOptions\n  }), displayOptions(options))));\n};\n\nexport default Question;","map":{"version":3,"sources":["C:/Users/teren/Desktop/item_match/components/Question.js"],"names":["React","Fragment","useState","useCallback","useEffect","TextField","Layout","Form","FormLayout","_","Question","options","setOptions","question","setQuestion","numOptions","setNumOptions","handleNumOptions","option","handleQuestion","handleSubmit","_event","setUrl","range","displayOptions","opts","console","log","map","item","fullLabel"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,WAApC,EAAiDC,SAAjD,QAAkE,OAAlE;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,IAA5B,EAAkCC,UAAlC,QAAoD,kBAApD;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAEnB,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBV,QAAQ,CAAC,CAAC,CAAD,CAAD,CAAtC;AACA,QAAM;AAAA,OAACW,QAAD;AAAA,OAAWC;AAAX,MAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACa,UAAD;AAAA,OAAaC;AAAb,MAA8Bd,QAAQ,CAAC,CAAD,CAA5C;AAEA,QAAMe,gBAAgB,GAAGd,WAAW,CAAEe,MAAD,IAAYF,aAAa,CAACE,MAAD,CAA1B,EAAoC,EAApC,CAApC;AACA,QAAMC,cAAc,GAAGhB,WAAW,CAAEU,QAAD,IAAcC,WAAW,CAACD,QAAD,CAA1B,EAAsC,EAAtC,CAAlC;AACA,QAAMO,YAAY,GAAGjB,WAAW,CAAEkB,MAAD,IAAYC,MAAM,CAAC,EAAD,CAAnB,EAAyB,EAAzB,CAAhC;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,UAAU,CAACH,CAAC,CAACc,KAAF,CAAQ,CAAR,EAAWR,UAAX,CAAD,CAAV;AACH,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;;AAKA,QAAMS,cAAc,GAAIC,IAAD,IAAU;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAYhB,OAAZ;;AACA,QAAI,CAACc,IAAL,EAAW;AACP,aAAO,gCAAP;AACH;;AACD,WACIA,IAAI,CAACG,GAAL,CAASC,IAAI,IAAI;AACb,YAAMC,SAAS,GAAI,UAASD,IAAK,EAAjC;AACA,aACI,MAAC,SAAD;AACI,QAAA,KAAK,EAAEC,SADX;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,KAAK,EAAE,EAHX;AAII,QAAA,QAAQ,EAAE,MAAM,CAAG,CAJvB;AAKI,QAAA,GAAG,EAAED;AALT,QADJ;AASH,KAXD,CADJ;AAaH,GAlBD;;AAoBA,SACI,MAAC,QAAD,QACI,MAAC,IAAD;AAAM,IAAA,UAAU,MAAhB;AAAiB,IAAA,QAAQ,EAAET;AAA3B,KACI,MAAC,UAAD,QACI,MAAC,SAAD;AACI,IAAA,KAAK,EAAEP,QADX;AAEI,IAAA,QAAQ,EAAEM,cAFd;AAGI,IAAA,KAAK,EAAC,UAHV;AAII,IAAA,IAAI,EAAC,MAJT;AAKI,IAAA,WAAW,EAAC;AALhB,IADJ,EAQI,MAAC,SAAD;AACI,IAAA,KAAK,EAAC,mBADV;AAEI,IAAA,IAAI,EAAC,QAFT;AAGI,IAAA,GAAG,EAAC,GAHR;AAII,IAAA,GAAG,EAAC,GAJR;AAKI,IAAA,KAAK,EAAEJ,UAAU,GAAG,CALxB;AAMI,IAAA,QAAQ,EAAEE;AANd,IARJ,EAkBKO,cAAc,CAACb,OAAD,CAlBnB,CADJ,CADJ,CADJ;AA2BH,CA9DD;;AAgEA,eAAeD,QAAf","sourcesContent":["import React, { Fragment, useState, useCallback, useEffect } from 'react'\r\nimport { TextField, Layout, Form, FormLayout } from '@shopify/polaris';\r\nimport _ from 'lodash';\r\n\r\nconst Question = () => {\r\n\r\n    const [options, setOptions] = useState([1]);\r\n    const [question, setQuestion] = useState('');\r\n    const [numOptions, setNumOptions] = useState(2);\r\n\r\n    const handleNumOptions = useCallback((option) => setNumOptions(option), []);\r\n    const handleQuestion = useCallback((question) => setQuestion(question), []);\r\n    const handleSubmit = useCallback((_event) => setUrl(''), []);\r\n\r\n    useEffect(() => {\r\n        setOptions(_.range(1, numOptions));\r\n    }, [numOptions])\r\n\r\n\r\n    const displayOptions = (opts) => {\r\n        console.log(options);\r\n        if (!opts) {\r\n            return <div>Loading...</div>\r\n        }\r\n        return (\r\n            opts.map(item => {\r\n                const fullLabel = `Option ${item}`;\r\n                return (\r\n                    <TextField\r\n                        label={fullLabel}\r\n                        type=\"text\"\r\n                        value={''}\r\n                        onChange={() => { }}\r\n                        key={item}\r\n                    />\r\n                )\r\n            }))\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Form noValidate onSubmit={handleSubmit}>\r\n                <FormLayout>\r\n                    <TextField\r\n                        value={question}\r\n                        onChange={handleQuestion}\r\n                        label=\"Question\"\r\n                        type=\"text\"\r\n                        placeholder=\"Which of the following do you prefer, etc\"\r\n                    />\r\n                    <TextField\r\n                        label=\"Number of options\"\r\n                        type=\"number\"\r\n                        max=\"5\"\r\n                        min=\"1\"\r\n                        value={numOptions - 1}\r\n                        onChange={handleNumOptions}\r\n\r\n                    />\r\n\r\n                    {displayOptions(options)}\r\n                </FormLayout>\r\n            </Form>\r\n\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default Question;"]},"metadata":{},"sourceType":"module"}