{"version":3,"file":"static/webpack/static\\development\\pages\\create-question.js.d498e03f80b73c6a2bce.hot-update.js","sources":["webpack:///./components/CreateQuestionForm.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\r\nimport { ResourcePicker } from '@shopify/app-bridge-react';\r\nimport {\r\n    TextField,\r\n    Form,\r\n    FormLayout,\r\n    Button,\r\n    ButtonGroup\r\n} from '@shopify/polaris';\r\nimport _ from 'lodash';\r\n\r\nconst CreateQuestionForm = () => {\r\n    const [options, setOptions] = useState({\r\n        1: { value: '', items: [] },\r\n        2: { value: '', items: [] },\r\n        3: { value: '', items: [] },\r\n        4: { value: '', items: [] }\r\n    });\r\n    const [question, setQuestion] = useState('');\r\n    const [numOptions, setNumOptions] = useState(2);\r\n    const [open, setOpen] = useState(false);\r\n    const [currOption, setCurrOption] = useState(0);\r\n\r\n    const handleAddOption = useCallback(() => {\r\n        if (numOptions > 4) {\r\n            setNumOptions(4);\r\n        } else if (numOptions < 2) {\r\n            setNumOptions(2);\r\n        } else if (numOptions !== 4) {\r\n            setNumOptions(numOptions + 1);\r\n        }\r\n    });\r\n\r\n    const handleRemoveOption = useCallback(() => {\r\n        if (numOptions > 4) {\r\n            setNumOptions(4);\r\n        } else if (numOptions < 2) {\r\n            setNumOptions(2);\r\n        } else if (numOptions !== 2) {\r\n            if (options[4].value !== '' && numOptions === 4) { options[4].value = ''; options[4].items = [] };\r\n            if (options[3].value !== '' && numOptions === 3) { options[3].value = ''; options[3].items = [] };\r\n            setNumOptions(numOptions - 1);\r\n        }\r\n    });\r\n\r\n    const handleQuestion = useCallback(question => setQuestion(question), []);\r\n    const handleSubmit = useCallback(() => {\r\n        const payload = {\r\n            question,\r\n            options\r\n        }\r\n        console.log(payload)\r\n    });\r\n    const handleChange = (item, val) => {\r\n        setOptions({ ...options, [item]: { value: val, items: options[item].items } });\r\n    };\r\n\r\n    const displayOptions = opts => {\r\n        return opts.map(item => {\r\n            return (\r\n                <div key={item}>\r\n                    <TextField\r\n                        label={`Option ${item}`}\r\n                        type='text'\r\n                        value={options[item].value}\r\n                        onChange={val => handleChange(item, val)}\r\n                    />\r\n                    <Button\r\n                        onClick={() => {\r\n                            setOpen(true);\r\n                            setCurrOption(item);\r\n                        }}\r\n                    >Add Item</Button>\r\n                </div>\r\n            );\r\n        });\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ResourcePicker\r\n                resourceType=\"Product\"\r\n                showVariants={false}\r\n                open={open}\r\n                onSelection={(resources) => {\r\n                    setOptions({\r\n                        ...options,\r\n                        [currOption]: { value: options[currOption].value, items: resources.selection }\r\n                    })\r\n                    setOpen(false);\r\n                    setCurrOption(0);\r\n                }\r\n                }\r\n                onCancel={() => {\r\n                    setOpen(false);\r\n                    setCurrOption(0);\r\n                }}\r\n            />\r\n\r\n            <Form noValidate onSubmit={handleSubmit}>\r\n                <FormLayout>\r\n                    <TextField\r\n                        value={question}\r\n                        onChange={handleQuestion}\r\n                        label='Question'\r\n                        type='text'\r\n                        placeholder='Which of the following do you prefer, etc'\r\n                    />\r\n                    <ButtonGroup>\r\n                        {numOptions === 4 ? (\r\n                            <Button primary disabled>\r\n                                Add Option\r\n                            </Button>\r\n                        ) : (\r\n                                <Button primary onClick={handleAddOption}>\r\n                                    Add Option\r\n                                </Button>\r\n                            )}\r\n\r\n                        {numOptions === 2 ? (\r\n                            <Button secondary disabled>\r\n                                Remove Option\r\n                            </Button>\r\n                        ) : (\r\n                                <Button secondary onClick={handleRemoveOption}>\r\n                                    Remove Option\r\n                                </Button>\r\n                            )}\r\n                    </ButtonGroup>\r\n\r\n                    {displayOptions(_.range(1, parseInt(numOptions, 10) + 1))}\r\n\r\n                    <Button primary onClick={handleSubmit}>Submit</Button>\r\n                </FormLayout>\r\n            </Form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default CreateQuestionForm;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAOA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAJA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAQA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAhBA;AAmBA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AASA;AAAA;AAAA;AAIA;AAAA;AAAA;AAMA;AAAA;AAAA;AAIA;AAAA;AAAA;AAQA;AAAA;AAAA;AAKA;AACA;AACA;;;;A","sourceRoot":""}